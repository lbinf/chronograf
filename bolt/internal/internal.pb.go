// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal.proto

/*
Package internal is a generated protocol buffer package.

It is generated from these files:
	internal.proto

It has these top-level messages:
	Source
	Dashboard
	DashboardCell
	DecimalPlaces
	TableOptions
	RenamableField
	Color
	Legend
	Axis
	Template
	TemplateValue
	TemplateQuery
	Server
	Layout
	Cell
	Query
	TimeShift
	Range
	AlertRule
	User
	Role
	Mapping
	Organization
	Config
	AuthConfig
	LogViewerConfig
	LogViewerColumn
	ColumnEncoding
	BuildInfo
*/
package internal

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Source struct {
	ID                 int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type               string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Username           string `protobuf:"bytes,4,opt,name=Username,proto3" json:"Username,omitempty"`
	Password           string `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
	URL                string `protobuf:"bytes,6,opt,name=URL,proto3" json:"URL,omitempty"`
	Default            bool   `protobuf:"varint,7,opt,name=Default,proto3" json:"Default,omitempty"`
	Telegraf           string `protobuf:"bytes,8,opt,name=Telegraf,proto3" json:"Telegraf,omitempty"`
	InsecureSkipVerify bool   `protobuf:"varint,9,opt,name=InsecureSkipVerify,proto3" json:"InsecureSkipVerify,omitempty"`
	MetaURL            string `protobuf:"bytes,10,opt,name=MetaURL,proto3" json:"MetaURL,omitempty"`
	SharedSecret       string `protobuf:"bytes,11,opt,name=SharedSecret,proto3" json:"SharedSecret,omitempty"`
	Organization       string `protobuf:"bytes,12,opt,name=Organization,proto3" json:"Organization,omitempty"`
	Role               string `protobuf:"bytes,13,opt,name=Role,proto3" json:"Role,omitempty"`
	DefaultRP          string `protobuf:"bytes,14,opt,name=DefaultRP,proto3" json:"DefaultRP,omitempty"`
}

func (m *Source) Reset()                    { *m = Source{} }
func (m *Source) String() string            { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()               {}
func (*Source) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{0} }

func (m *Source) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Source) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Source) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Source) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Source) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Source) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *Source) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

func (m *Source) GetTelegraf() string {
	if m != nil {
		return m.Telegraf
	}
	return ""
}

func (m *Source) GetInsecureSkipVerify() bool {
	if m != nil {
		return m.InsecureSkipVerify
	}
	return false
}

func (m *Source) GetMetaURL() string {
	if m != nil {
		return m.MetaURL
	}
	return ""
}

func (m *Source) GetSharedSecret() string {
	if m != nil {
		return m.SharedSecret
	}
	return ""
}

func (m *Source) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Source) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Source) GetDefaultRP() string {
	if m != nil {
		return m.DefaultRP
	}
	return ""
}

type Dashboard struct {
	ID           int64            `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name         string           `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Cells        []*DashboardCell `protobuf:"bytes,3,rep,name=cells" json:"cells,omitempty"`
	Templates    []*Template      `protobuf:"bytes,4,rep,name=templates" json:"templates,omitempty"`
	Organization string           `protobuf:"bytes,5,opt,name=Organization,proto3" json:"Organization,omitempty"`
}

func (m *Dashboard) Reset()                    { *m = Dashboard{} }
func (m *Dashboard) String() string            { return proto.CompactTextString(m) }
func (*Dashboard) ProtoMessage()               {}
func (*Dashboard) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{1} }

func (m *Dashboard) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Dashboard) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Dashboard) GetCells() []*DashboardCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *Dashboard) GetTemplates() []*Template {
	if m != nil {
		return m.Templates
	}
	return nil
}

func (m *Dashboard) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type DashboardCell struct {
	X             int32             `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32             `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	W             int32             `protobuf:"varint,3,opt,name=w,proto3" json:"w,omitempty"`
	H             int32             `protobuf:"varint,4,opt,name=h,proto3" json:"h,omitempty"`
	Queries       []*Query          `protobuf:"bytes,5,rep,name=queries" json:"queries,omitempty"`
	Name          string            `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Type          string            `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	ID            string            `protobuf:"bytes,8,opt,name=ID,proto3" json:"ID,omitempty"`
	Axes          map[string]*Axis  `protobuf:"bytes,9,rep,name=axes" json:"axes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	Colors        []*Color          `protobuf:"bytes,10,rep,name=colors" json:"colors,omitempty"`
	Legend        *Legend           `protobuf:"bytes,11,opt,name=legend" json:"legend,omitempty"`
	TableOptions  *TableOptions     `protobuf:"bytes,12,opt,name=tableOptions" json:"tableOptions,omitempty"`
	FieldOptions  []*RenamableField `protobuf:"bytes,13,rep,name=fieldOptions" json:"fieldOptions,omitempty"`
	TimeFormat    string            `protobuf:"bytes,14,opt,name=timeFormat,proto3" json:"timeFormat,omitempty"`
	DecimalPlaces *DecimalPlaces    `protobuf:"bytes,15,opt,name=decimalPlaces" json:"decimalPlaces,omitempty"`
}

func (m *DashboardCell) Reset()                    { *m = DashboardCell{} }
func (m *DashboardCell) String() string            { return proto.CompactTextString(m) }
func (*DashboardCell) ProtoMessage()               {}
func (*DashboardCell) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{2} }

func (m *DashboardCell) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *DashboardCell) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *DashboardCell) GetW() int32 {
	if m != nil {
		return m.W
	}
	return 0
}

func (m *DashboardCell) GetH() int32 {
	if m != nil {
		return m.H
	}
	return 0
}

func (m *DashboardCell) GetQueries() []*Query {
	if m != nil {
		return m.Queries
	}
	return nil
}

func (m *DashboardCell) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DashboardCell) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DashboardCell) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DashboardCell) GetAxes() map[string]*Axis {
	if m != nil {
		return m.Axes
	}
	return nil
}

func (m *DashboardCell) GetColors() []*Color {
	if m != nil {
		return m.Colors
	}
	return nil
}

func (m *DashboardCell) GetLegend() *Legend {
	if m != nil {
		return m.Legend
	}
	return nil
}

func (m *DashboardCell) GetTableOptions() *TableOptions {
	if m != nil {
		return m.TableOptions
	}
	return nil
}

func (m *DashboardCell) GetFieldOptions() []*RenamableField {
	if m != nil {
		return m.FieldOptions
	}
	return nil
}

func (m *DashboardCell) GetTimeFormat() string {
	if m != nil {
		return m.TimeFormat
	}
	return ""
}

func (m *DashboardCell) GetDecimalPlaces() *DecimalPlaces {
	if m != nil {
		return m.DecimalPlaces
	}
	return nil
}

type DecimalPlaces struct {
	IsEnforced bool  `protobuf:"varint,1,opt,name=isEnforced,proto3" json:"isEnforced,omitempty"`
	Digits     int32 `protobuf:"varint,2,opt,name=digits,proto3" json:"digits,omitempty"`
}

func (m *DecimalPlaces) Reset()                    { *m = DecimalPlaces{} }
func (m *DecimalPlaces) String() string            { return proto.CompactTextString(m) }
func (*DecimalPlaces) ProtoMessage()               {}
func (*DecimalPlaces) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{3} }

func (m *DecimalPlaces) GetIsEnforced() bool {
	if m != nil {
		return m.IsEnforced
	}
	return false
}

func (m *DecimalPlaces) GetDigits() int32 {
	if m != nil {
		return m.Digits
	}
	return 0
}

type TableOptions struct {
	VerticalTimeAxis bool            `protobuf:"varint,2,opt,name=verticalTimeAxis,proto3" json:"verticalTimeAxis,omitempty"`
	SortBy           *RenamableField `protobuf:"bytes,3,opt,name=sortBy" json:"sortBy,omitempty"`
	Wrapping         string          `protobuf:"bytes,4,opt,name=wrapping,proto3" json:"wrapping,omitempty"`
	FixFirstColumn   bool            `protobuf:"varint,6,opt,name=fixFirstColumn,proto3" json:"fixFirstColumn,omitempty"`
}

func (m *TableOptions) Reset()                    { *m = TableOptions{} }
func (m *TableOptions) String() string            { return proto.CompactTextString(m) }
func (*TableOptions) ProtoMessage()               {}
func (*TableOptions) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{4} }

func (m *TableOptions) GetVerticalTimeAxis() bool {
	if m != nil {
		return m.VerticalTimeAxis
	}
	return false
}

func (m *TableOptions) GetSortBy() *RenamableField {
	if m != nil {
		return m.SortBy
	}
	return nil
}

func (m *TableOptions) GetWrapping() string {
	if m != nil {
		return m.Wrapping
	}
	return ""
}

func (m *TableOptions) GetFixFirstColumn() bool {
	if m != nil {
		return m.FixFirstColumn
	}
	return false
}

type RenamableField struct {
	InternalName string `protobuf:"bytes,1,opt,name=internalName,proto3" json:"internalName,omitempty"`
	DisplayName  string `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Visible      bool   `protobuf:"varint,3,opt,name=visible,proto3" json:"visible,omitempty"`
}

func (m *RenamableField) Reset()                    { *m = RenamableField{} }
func (m *RenamableField) String() string            { return proto.CompactTextString(m) }
func (*RenamableField) ProtoMessage()               {}
func (*RenamableField) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{5} }

func (m *RenamableField) GetInternalName() string {
	if m != nil {
		return m.InternalName
	}
	return ""
}

func (m *RenamableField) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *RenamableField) GetVisible() bool {
	if m != nil {
		return m.Visible
	}
	return false
}

type Color struct {
	ID    string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Hex   string `protobuf:"bytes,3,opt,name=Hex,proto3" json:"Hex,omitempty"`
	Name  string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Value string `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (m *Color) Reset()                    { *m = Color{} }
func (m *Color) String() string            { return proto.CompactTextString(m) }
func (*Color) ProtoMessage()               {}
func (*Color) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{6} }

func (m *Color) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Color) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Color) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *Color) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Color) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Legend struct {
	Type        string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Orientation string `protobuf:"bytes,2,opt,name=Orientation,proto3" json:"Orientation,omitempty"`
}

func (m *Legend) Reset()                    { *m = Legend{} }
func (m *Legend) String() string            { return proto.CompactTextString(m) }
func (*Legend) ProtoMessage()               {}
func (*Legend) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{7} }

func (m *Legend) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Legend) GetOrientation() string {
	if m != nil {
		return m.Orientation
	}
	return ""
}

type Axis struct {
	LegacyBounds []int64  `protobuf:"varint,1,rep,packed,name=legacyBounds" json:"legacyBounds,omitempty"`
	Bounds       []string `protobuf:"bytes,2,rep,name=bounds" json:"bounds,omitempty"`
	Label        string   `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Prefix       string   `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix       string   `protobuf:"bytes,5,opt,name=suffix,proto3" json:"suffix,omitempty"`
	Base         string   `protobuf:"bytes,6,opt,name=base,proto3" json:"base,omitempty"`
	Scale        string   `protobuf:"bytes,7,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (m *Axis) Reset()                    { *m = Axis{} }
func (m *Axis) String() string            { return proto.CompactTextString(m) }
func (*Axis) ProtoMessage()               {}
func (*Axis) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{8} }

func (m *Axis) GetLegacyBounds() []int64 {
	if m != nil {
		return m.LegacyBounds
	}
	return nil
}

func (m *Axis) GetBounds() []string {
	if m != nil {
		return m.Bounds
	}
	return nil
}

func (m *Axis) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Axis) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Axis) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

func (m *Axis) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *Axis) GetScale() string {
	if m != nil {
		return m.Scale
	}
	return ""
}

type Template struct {
	ID      string           `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	TempVar string           `protobuf:"bytes,2,opt,name=temp_var,json=tempVar,proto3" json:"temp_var,omitempty"`
	Values  []*TemplateValue `protobuf:"bytes,3,rep,name=values" json:"values,omitempty"`
	Type    string           `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Label   string           `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	Query   *TemplateQuery   `protobuf:"bytes,6,opt,name=query" json:"query,omitempty"`
}

func (m *Template) Reset()                    { *m = Template{} }
func (m *Template) String() string            { return proto.CompactTextString(m) }
func (*Template) ProtoMessage()               {}
func (*Template) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{9} }

func (m *Template) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Template) GetTempVar() string {
	if m != nil {
		return m.TempVar
	}
	return ""
}

func (m *Template) GetValues() []*TemplateValue {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Template) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Template) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Template) GetQuery() *TemplateQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

type TemplateValue struct {
	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Selected bool   `protobuf:"varint,3,opt,name=selected,proto3" json:"selected,omitempty"`
	Key      string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *TemplateValue) Reset()                    { *m = TemplateValue{} }
func (m *TemplateValue) String() string            { return proto.CompactTextString(m) }
func (*TemplateValue) ProtoMessage()               {}
func (*TemplateValue) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{10} }

func (m *TemplateValue) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TemplateValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TemplateValue) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

func (m *TemplateValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type TemplateQuery struct {
	Command     string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Db          string `protobuf:"bytes,2,opt,name=db,proto3" json:"db,omitempty"`
	Rp          string `protobuf:"bytes,3,opt,name=rp,proto3" json:"rp,omitempty"`
	Measurement string `protobuf:"bytes,4,opt,name=measurement,proto3" json:"measurement,omitempty"`
	TagKey      string `protobuf:"bytes,5,opt,name=tag_key,json=tagKey,proto3" json:"tag_key,omitempty"`
	FieldKey    string `protobuf:"bytes,6,opt,name=field_key,json=fieldKey,proto3" json:"field_key,omitempty"`
}

func (m *TemplateQuery) Reset()                    { *m = TemplateQuery{} }
func (m *TemplateQuery) String() string            { return proto.CompactTextString(m) }
func (*TemplateQuery) ProtoMessage()               {}
func (*TemplateQuery) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{11} }

func (m *TemplateQuery) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *TemplateQuery) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *TemplateQuery) GetRp() string {
	if m != nil {
		return m.Rp
	}
	return ""
}

func (m *TemplateQuery) GetMeasurement() string {
	if m != nil {
		return m.Measurement
	}
	return ""
}

func (m *TemplateQuery) GetTagKey() string {
	if m != nil {
		return m.TagKey
	}
	return ""
}

func (m *TemplateQuery) GetFieldKey() string {
	if m != nil {
		return m.FieldKey
	}
	return ""
}

type Server struct {
	ID                 int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Username           string `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	Password           string `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	URL                string `protobuf:"bytes,5,opt,name=URL,proto3" json:"URL,omitempty"`
	SrcID              int64  `protobuf:"varint,6,opt,name=SrcID,proto3" json:"SrcID,omitempty"`
	Active             bool   `protobuf:"varint,7,opt,name=Active,proto3" json:"Active,omitempty"`
	Organization       string `protobuf:"bytes,8,opt,name=Organization,proto3" json:"Organization,omitempty"`
	InsecureSkipVerify bool   `protobuf:"varint,9,opt,name=InsecureSkipVerify,proto3" json:"InsecureSkipVerify,omitempty"`
	Type               string `protobuf:"bytes,10,opt,name=Type,proto3" json:"Type,omitempty"`
	MetadataJSON       string `protobuf:"bytes,11,opt,name=MetadataJSON,proto3" json:"MetadataJSON,omitempty"`
}

func (m *Server) Reset()                    { *m = Server{} }
func (m *Server) String() string            { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()               {}
func (*Server) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{12} }

func (m *Server) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Server) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Server) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Server) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Server) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *Server) GetSrcID() int64 {
	if m != nil {
		return m.SrcID
	}
	return 0
}

func (m *Server) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Server) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Server) GetInsecureSkipVerify() bool {
	if m != nil {
		return m.InsecureSkipVerify
	}
	return false
}

func (m *Server) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Server) GetMetadataJSON() string {
	if m != nil {
		return m.MetadataJSON
	}
	return ""
}

type Layout struct {
	ID          string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Application string  `protobuf:"bytes,2,opt,name=Application,proto3" json:"Application,omitempty"`
	Measurement string  `protobuf:"bytes,3,opt,name=Measurement,proto3" json:"Measurement,omitempty"`
	Cells       []*Cell `protobuf:"bytes,4,rep,name=Cells" json:"Cells,omitempty"`
	Autoflow    bool    `protobuf:"varint,5,opt,name=Autoflow,proto3" json:"Autoflow,omitempty"`
}

func (m *Layout) Reset()                    { *m = Layout{} }
func (m *Layout) String() string            { return proto.CompactTextString(m) }
func (*Layout) ProtoMessage()               {}
func (*Layout) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{13} }

func (m *Layout) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Layout) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *Layout) GetMeasurement() string {
	if m != nil {
		return m.Measurement
	}
	return ""
}

func (m *Layout) GetCells() []*Cell {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *Layout) GetAutoflow() bool {
	if m != nil {
		return m.Autoflow
	}
	return false
}

type Cell struct {
	X       int32            `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y       int32            `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	W       int32            `protobuf:"varint,3,opt,name=w,proto3" json:"w,omitempty"`
	H       int32            `protobuf:"varint,4,opt,name=h,proto3" json:"h,omitempty"`
	Queries []*Query         `protobuf:"bytes,5,rep,name=queries" json:"queries,omitempty"`
	I       string           `protobuf:"bytes,6,opt,name=i,proto3" json:"i,omitempty"`
	Name    string           `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Yranges []int64          `protobuf:"varint,8,rep,packed,name=yranges" json:"yranges,omitempty"`
	Ylabels []string         `protobuf:"bytes,9,rep,name=ylabels" json:"ylabels,omitempty"`
	Type    string           `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Axes    map[string]*Axis `protobuf:"bytes,11,rep,name=axes" json:"axes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Cell) Reset()                    { *m = Cell{} }
func (m *Cell) String() string            { return proto.CompactTextString(m) }
func (*Cell) ProtoMessage()               {}
func (*Cell) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{14} }

func (m *Cell) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Cell) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Cell) GetW() int32 {
	if m != nil {
		return m.W
	}
	return 0
}

func (m *Cell) GetH() int32 {
	if m != nil {
		return m.H
	}
	return 0
}

func (m *Cell) GetQueries() []*Query {
	if m != nil {
		return m.Queries
	}
	return nil
}

func (m *Cell) GetI() string {
	if m != nil {
		return m.I
	}
	return ""
}

func (m *Cell) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cell) GetYranges() []int64 {
	if m != nil {
		return m.Yranges
	}
	return nil
}

func (m *Cell) GetYlabels() []string {
	if m != nil {
		return m.Ylabels
	}
	return nil
}

func (m *Cell) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Cell) GetAxes() map[string]*Axis {
	if m != nil {
		return m.Axes
	}
	return nil
}

type Query struct {
	Command  string       `protobuf:"bytes,1,opt,name=Command,proto3" json:"Command,omitempty"`
	DB       string       `protobuf:"bytes,2,opt,name=DB,proto3" json:"DB,omitempty"`
	RP       string       `protobuf:"bytes,3,opt,name=RP,proto3" json:"RP,omitempty"`
	GroupBys []string     `protobuf:"bytes,4,rep,name=GroupBys" json:"GroupBys,omitempty"`
	Wheres   []string     `protobuf:"bytes,5,rep,name=Wheres" json:"Wheres,omitempty"`
	Label    string       `protobuf:"bytes,6,opt,name=Label,proto3" json:"Label,omitempty"`
	Range    *Range       `protobuf:"bytes,7,opt,name=Range" json:"Range,omitempty"`
	Source   string       `protobuf:"bytes,8,opt,name=Source,proto3" json:"Source,omitempty"`
	Shifts   []*TimeShift `protobuf:"bytes,9,rep,name=Shifts" json:"Shifts,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{15} }

func (m *Query) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Query) GetDB() string {
	if m != nil {
		return m.DB
	}
	return ""
}

func (m *Query) GetRP() string {
	if m != nil {
		return m.RP
	}
	return ""
}

func (m *Query) GetGroupBys() []string {
	if m != nil {
		return m.GroupBys
	}
	return nil
}

func (m *Query) GetWheres() []string {
	if m != nil {
		return m.Wheres
	}
	return nil
}

func (m *Query) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Query) GetRange() *Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *Query) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Query) GetShifts() []*TimeShift {
	if m != nil {
		return m.Shifts
	}
	return nil
}

type TimeShift struct {
	Label    string `protobuf:"bytes,1,opt,name=Label,proto3" json:"Label,omitempty"`
	Unit     string `protobuf:"bytes,2,opt,name=Unit,proto3" json:"Unit,omitempty"`
	Quantity string `protobuf:"bytes,3,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
}

func (m *TimeShift) Reset()                    { *m = TimeShift{} }
func (m *TimeShift) String() string            { return proto.CompactTextString(m) }
func (*TimeShift) ProtoMessage()               {}
func (*TimeShift) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{16} }

func (m *TimeShift) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *TimeShift) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *TimeShift) GetQuantity() string {
	if m != nil {
		return m.Quantity
	}
	return ""
}

type Range struct {
	Upper int64 `protobuf:"varint,1,opt,name=Upper,proto3" json:"Upper,omitempty"`
	Lower int64 `protobuf:"varint,2,opt,name=Lower,proto3" json:"Lower,omitempty"`
}

func (m *Range) Reset()                    { *m = Range{} }
func (m *Range) String() string            { return proto.CompactTextString(m) }
func (*Range) ProtoMessage()               {}
func (*Range) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{17} }

func (m *Range) GetUpper() int64 {
	if m != nil {
		return m.Upper
	}
	return 0
}

func (m *Range) GetLower() int64 {
	if m != nil {
		return m.Lower
	}
	return 0
}

type AlertRule struct {
	ID     string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	JSON   string `protobuf:"bytes,2,opt,name=JSON,proto3" json:"JSON,omitempty"`
	SrcID  int64  `protobuf:"varint,3,opt,name=SrcID,proto3" json:"SrcID,omitempty"`
	KapaID int64  `protobuf:"varint,4,opt,name=KapaID,proto3" json:"KapaID,omitempty"`
}

func (m *AlertRule) Reset()                    { *m = AlertRule{} }
func (m *AlertRule) String() string            { return proto.CompactTextString(m) }
func (*AlertRule) ProtoMessage()               {}
func (*AlertRule) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{18} }

func (m *AlertRule) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *AlertRule) GetJSON() string {
	if m != nil {
		return m.JSON
	}
	return ""
}

func (m *AlertRule) GetSrcID() int64 {
	if m != nil {
		return m.SrcID
	}
	return 0
}

func (m *AlertRule) GetKapaID() int64 {
	if m != nil {
		return m.KapaID
	}
	return 0
}

type User struct {
	ID         uint64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Provider   string  `protobuf:"bytes,3,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Scheme     string  `protobuf:"bytes,4,opt,name=Scheme,proto3" json:"Scheme,omitempty"`
	Roles      []*Role `protobuf:"bytes,5,rep,name=Roles" json:"Roles,omitempty"`
	SuperAdmin bool    `protobuf:"varint,6,opt,name=SuperAdmin,proto3" json:"SuperAdmin,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{19} }

func (m *User) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *User) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *User) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetSuperAdmin() bool {
	if m != nil {
		return m.SuperAdmin
	}
	return false
}

type Role struct {
	Organization string `protobuf:"bytes,1,opt,name=Organization,proto3" json:"Organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{20} }

func (m *Role) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Mapping struct {
	Provider             string `protobuf:"bytes,1,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Scheme               string `protobuf:"bytes,2,opt,name=Scheme,proto3" json:"Scheme,omitempty"`
	ProviderOrganization string `protobuf:"bytes,3,opt,name=ProviderOrganization,proto3" json:"ProviderOrganization,omitempty"`
	ID                   string `protobuf:"bytes,4,opt,name=ID,proto3" json:"ID,omitempty"`
	Organization         string `protobuf:"bytes,5,opt,name=Organization,proto3" json:"Organization,omitempty"`
}

func (m *Mapping) Reset()                    { *m = Mapping{} }
func (m *Mapping) String() string            { return proto.CompactTextString(m) }
func (*Mapping) ProtoMessage()               {}
func (*Mapping) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{21} }

func (m *Mapping) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Mapping) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *Mapping) GetProviderOrganization() string {
	if m != nil {
		return m.ProviderOrganization
	}
	return ""
}

func (m *Mapping) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Mapping) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type Organization struct {
	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	DefaultRole string `protobuf:"bytes,3,opt,name=DefaultRole,proto3" json:"DefaultRole,omitempty"`
}

func (m *Organization) Reset()                    { *m = Organization{} }
func (m *Organization) String() string            { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()               {}
func (*Organization) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{22} }

func (m *Organization) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Organization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organization) GetDefaultRole() string {
	if m != nil {
		return m.DefaultRole
	}
	return ""
}

type Config struct {
	Auth      *AuthConfig      `protobuf:"bytes,1,opt,name=Auth" json:"Auth,omitempty"`
	LogViewer *LogViewerConfig `protobuf:"bytes,2,opt,name=LogViewer" json:"LogViewer,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{23} }

func (m *Config) GetAuth() *AuthConfig {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *Config) GetLogViewer() *LogViewerConfig {
	if m != nil {
		return m.LogViewer
	}
	return nil
}

type AuthConfig struct {
	SuperAdminNewUsers bool `protobuf:"varint,1,opt,name=SuperAdminNewUsers,proto3" json:"SuperAdminNewUsers,omitempty"`
}

func (m *AuthConfig) Reset()                    { *m = AuthConfig{} }
func (m *AuthConfig) String() string            { return proto.CompactTextString(m) }
func (*AuthConfig) ProtoMessage()               {}
func (*AuthConfig) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{24} }

func (m *AuthConfig) GetSuperAdminNewUsers() bool {
	if m != nil {
		return m.SuperAdminNewUsers
	}
	return false
}

type LogViewerConfig struct {
	Columns []*LogViewerColumn `protobuf:"bytes,1,rep,name=Columns" json:"Columns,omitempty"`
}

func (m *LogViewerConfig) Reset()                    { *m = LogViewerConfig{} }
func (m *LogViewerConfig) String() string            { return proto.CompactTextString(m) }
func (*LogViewerConfig) ProtoMessage()               {}
func (*LogViewerConfig) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{25} }

func (m *LogViewerConfig) GetColumns() []*LogViewerColumn {
	if m != nil {
		return m.Columns
	}
	return nil
}

type LogViewerColumn struct {
	Name      string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Position  int32             `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Encodings []*ColumnEncoding `protobuf:"bytes,3,rep,name=Encodings" json:"Encodings,omitempty"`
}

func (m *LogViewerColumn) Reset()                    { *m = LogViewerColumn{} }
func (m *LogViewerColumn) String() string            { return proto.CompactTextString(m) }
func (*LogViewerColumn) ProtoMessage()               {}
func (*LogViewerColumn) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{26} }

func (m *LogViewerColumn) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogViewerColumn) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *LogViewerColumn) GetEncodings() []*ColumnEncoding {
	if m != nil {
		return m.Encodings
	}
	return nil
}

type ColumnEncoding struct {
	Type  string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (m *ColumnEncoding) Reset()                    { *m = ColumnEncoding{} }
func (m *ColumnEncoding) String() string            { return proto.CompactTextString(m) }
func (*ColumnEncoding) ProtoMessage()               {}
func (*ColumnEncoding) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{27} }

func (m *ColumnEncoding) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ColumnEncoding) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ColumnEncoding) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BuildInfo struct {
	Version string `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Commit  string `protobuf:"bytes,2,opt,name=Commit,proto3" json:"Commit,omitempty"`
}

func (m *BuildInfo) Reset()                    { *m = BuildInfo{} }
func (m *BuildInfo) String() string            { return proto.CompactTextString(m) }
func (*BuildInfo) ProtoMessage()               {}
func (*BuildInfo) Descriptor() ([]byte, []int) { return fileDescriptorInternal, []int{28} }

func (m *BuildInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *BuildInfo) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func init() {
	proto.RegisterType((*Source)(nil), "internal.Source")
	proto.RegisterType((*Dashboard)(nil), "internal.Dashboard")
	proto.RegisterType((*DashboardCell)(nil), "internal.DashboardCell")
	proto.RegisterType((*DecimalPlaces)(nil), "internal.DecimalPlaces")
	proto.RegisterType((*TableOptions)(nil), "internal.TableOptions")
	proto.RegisterType((*RenamableField)(nil), "internal.RenamableField")
	proto.RegisterType((*Color)(nil), "internal.Color")
	proto.RegisterType((*Legend)(nil), "internal.Legend")
	proto.RegisterType((*Axis)(nil), "internal.Axis")
	proto.RegisterType((*Template)(nil), "internal.Template")
	proto.RegisterType((*TemplateValue)(nil), "internal.TemplateValue")
	proto.RegisterType((*TemplateQuery)(nil), "internal.TemplateQuery")
	proto.RegisterType((*Server)(nil), "internal.Server")
	proto.RegisterType((*Layout)(nil), "internal.Layout")
	proto.RegisterType((*Cell)(nil), "internal.Cell")
	proto.RegisterType((*Query)(nil), "internal.Query")
	proto.RegisterType((*TimeShift)(nil), "internal.TimeShift")
	proto.RegisterType((*Range)(nil), "internal.Range")
	proto.RegisterType((*AlertRule)(nil), "internal.AlertRule")
	proto.RegisterType((*User)(nil), "internal.User")
	proto.RegisterType((*Role)(nil), "internal.Role")
	proto.RegisterType((*Mapping)(nil), "internal.Mapping")
	proto.RegisterType((*Organization)(nil), "internal.Organization")
	proto.RegisterType((*Config)(nil), "internal.Config")
	proto.RegisterType((*AuthConfig)(nil), "internal.AuthConfig")
	proto.RegisterType((*LogViewerConfig)(nil), "internal.LogViewerConfig")
	proto.RegisterType((*LogViewerColumn)(nil), "internal.LogViewerColumn")
	proto.RegisterType((*ColumnEncoding)(nil), "internal.ColumnEncoding")
	proto.RegisterType((*BuildInfo)(nil), "internal.BuildInfo")
}

func init() { proto.RegisterFile("internal.proto", fileDescriptorInternal) }

var fileDescriptorInternal = []byte{
	// 1792 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x4b, 0x6f, 0xdc, 0xc8,
	0x11, 0x06, 0x67, 0x86, 0xa3, 0x61, 0x8d, 0x24, 0x0b, 0x1d, 0x63, 0x97, 0xbb, 0x09, 0x82, 0x09,
	0x91, 0x87, 0xf2, 0x58, 0x67, 0x21, 0x23, 0x0f, 0x2c, 0x76, 0x17, 0xd0, 0xc3, 0x76, 0x64, 0xcb,
	0xb6, 0xdc, 0x92, 0x95, 0x53, 0x60, 0xb4, 0xc8, 0x9e, 0x99, 0x86, 0x39, 0x24, 0xd3, 0x24, 0x25,
	0x31, 0xe7, 0xfc, 0x8e, 0x00, 0x01, 0x92, 0x7b, 0x10, 0xe4, 0x18, 0x20, 0xf7, 0xfc, 0x80, 0xfc,
	0x95, 0x5c, 0x83, 0xea, 0x07, 0xd9, 0x94, 0xc6, 0x86, 0x03, 0x04, 0xb9, 0xf5, 0x57, 0x55, 0x53,
	0x5d, 0x5d, 0x5d, 0xf5, 0x75, 0x71, 0x60, 0x5b, 0x64, 0x15, 0x97, 0x19, 0x4b, 0x1f, 0x14, 0x32,
	0xaf, 0x72, 0x32, 0xb1, 0x38, 0xfa, 0xfd, 0x10, 0xc6, 0x67, 0x79, 0x2d, 0x63, 0x4e, 0xb6, 0x61,
	0x70, 0x7c, 0x14, 0x7a, 0x33, 0x6f, 0x77, 0x48, 0x07, 0xc7, 0x47, 0x84, 0xc0, 0xe8, 0x05, 0x5b,
	0xf1, 0x70, 0x30, 0xf3, 0x76, 0x03, 0xaa, 0xd6, 0x28, 0x3b, 0x6f, 0x0a, 0x1e, 0x0e, 0xb5, 0x0c,
	0xd7, 0xe4, 0x53, 0x98, 0xbc, 0x2e, 0xd1, 0xdb, 0x8a, 0x87, 0x23, 0x25, 0x6f, 0x31, 0xea, 0x4e,
	0x59, 0x59, 0x5e, 0xe7, 0x32, 0x09, 0x7d, 0xad, 0xb3, 0x98, 0xec, 0xc0, 0xf0, 0x35, 0x3d, 0x09,
	0xc7, 0x4a, 0x8c, 0x4b, 0x12, 0xc2, 0xc6, 0x11, 0x9f, 0xb3, 0x3a, 0xad, 0xc2, 0x8d, 0x99, 0xb7,
	0x3b, 0xa1, 0x16, 0xa2, 0x9f, 0x73, 0x9e, 0xf2, 0x85, 0x64, 0xf3, 0x70, 0xa2, 0xfd, 0x58, 0x4c,
	0x1e, 0x00, 0x39, 0xce, 0x4a, 0x1e, 0xd7, 0x92, 0x9f, 0xbd, 0x15, 0xc5, 0x05, 0x97, 0x62, 0xde,
	0x84, 0x81, 0x72, 0xb0, 0x46, 0x83, 0xbb, 0x3c, 0xe7, 0x15, 0xc3, 0xbd, 0x41, 0xb9, 0xb2, 0x90,
	0x44, 0xb0, 0x79, 0xb6, 0x64, 0x92, 0x27, 0x67, 0x3c, 0x96, 0xbc, 0x0a, 0xa7, 0x4a, 0xdd, 0x93,
	0xa1, 0xcd, 0x4b, 0xb9, 0x60, 0x99, 0xf8, 0x1d, 0xab, 0x44, 0x9e, 0x85, 0x9b, 0xda, 0xc6, 0x95,
	0x61, 0x96, 0x68, 0x9e, 0xf2, 0x70, 0x4b, 0x67, 0x09, 0xd7, 0xe4, 0x5b, 0x10, 0x98, 0xc3, 0xd0,
	0xd3, 0x70, 0x5b, 0x29, 0x3a, 0x41, 0xf4, 0x37, 0x0f, 0x82, 0x23, 0x56, 0x2e, 0x2f, 0x73, 0x26,
	0x93, 0x0f, 0xba, 0x89, 0xcf, 0xc0, 0x8f, 0x79, 0x9a, 0x96, 0xe1, 0x70, 0x36, 0xdc, 0x9d, 0xee,
	0x7d, 0xfc, 0xa0, 0xbd, 0xe2, 0xd6, 0xcf, 0x21, 0x4f, 0x53, 0xaa, 0xad, 0xc8, 0xe7, 0x10, 0x54,
	0x7c, 0x55, 0xa4, 0xac, 0xe2, 0x65, 0x38, 0x52, 0x3f, 0x21, 0xdd, 0x4f, 0xce, 0x8d, 0x8a, 0x76,
	0x46, 0x77, 0x0e, 0xea, 0xdf, 0x3d, 0x68, 0xf4, 0xaf, 0x11, 0x6c, 0xf5, 0xb6, 0x23, 0x9b, 0xe0,
	0xdd, 0xa8, 0xc8, 0x7d, 0xea, 0xdd, 0x20, 0x6a, 0x54, 0xd4, 0x3e, 0xf5, 0x1a, 0x44, 0xd7, 0xaa,
	0x72, 0x7c, 0xea, 0x5d, 0x23, 0x5a, 0xaa, 0x7a, 0xf1, 0xa9, 0xb7, 0x24, 0x3f, 0x84, 0x8d, 0xdf,
	0xd6, 0x5c, 0x0a, 0x5e, 0x86, 0xbe, 0x8a, 0xee, 0x5e, 0x17, 0xdd, 0xab, 0x9a, 0xcb, 0x86, 0x5a,
	0x3d, 0x66, 0x43, 0xd5, 0x9a, 0x2e, 0x1c, 0xb5, 0x46, 0x59, 0x85, 0x75, 0xb9, 0xa1, 0x65, 0xb8,
	0x36, 0x59, 0xd4, 0xd5, 0x82, 0x59, 0xfc, 0x19, 0x8c, 0xd8, 0x0d, 0x2f, 0xc3, 0x40, 0xf9, 0xff,
	0xce, 0x3b, 0x12, 0xf6, 0x60, 0xff, 0x86, 0x97, 0x8f, 0xb2, 0x4a, 0x36, 0x54, 0x99, 0x93, 0x1f,
	0xc0, 0x38, 0xce, 0xd3, 0x5c, 0x96, 0x21, 0xdc, 0x0e, 0xec, 0x10, 0xe5, 0xd4, 0xa8, 0xc9, 0x2e,
	0x8c, 0x53, 0xbe, 0xe0, 0x59, 0xa2, 0xea, 0x66, 0xba, 0xb7, 0xd3, 0x19, 0x9e, 0x28, 0x39, 0x35,
	0x7a, 0xf2, 0x05, 0x6c, 0x56, 0xec, 0x32, 0xe5, 0x2f, 0x0b, 0xcc, 0x62, 0xa9, 0x6a, 0x68, 0xba,
	0xf7, 0x91, 0x73, 0x1f, 0x8e, 0x96, 0xf6, 0x6c, 0xc9, 0x97, 0xb0, 0x39, 0x17, 0x3c, 0x4d, 0xec,
	0x6f, 0xb7, 0x54, 0x50, 0x61, 0xf7, 0x5b, 0xca, 0x33, 0xb6, 0xc2, 0x5f, 0x3c, 0x46, 0x33, 0xda,
	0xb3, 0x26, 0xdf, 0x06, 0xa8, 0xc4, 0x8a, 0x3f, 0xce, 0xe5, 0x8a, 0x55, 0xa6, 0x0c, 0x1d, 0x09,
	0xf9, 0x0a, 0xb6, 0x12, 0x1e, 0x8b, 0x15, 0x4b, 0x4f, 0x53, 0x16, 0xf3, 0x32, 0xbc, 0xa7, 0x42,
	0x73, 0xab, 0xcb, 0x55, 0xd3, 0xbe, 0xf5, 0xa7, 0x4f, 0x20, 0x68, 0xd3, 0x87, 0xfd, 0xfd, 0x96,
	0x37, 0xaa, 0x18, 0x02, 0x8a, 0x4b, 0xf2, 0x5d, 0xf0, 0xaf, 0x58, 0x5a, 0xeb, 0x42, 0x9e, 0xee,
	0x6d, 0x77, 0x5e, 0xf7, 0x6f, 0x44, 0x49, 0xb5, 0xf2, 0x8b, 0xc1, 0x2f, 0xbd, 0xe8, 0x09, 0x6c,
	0xf5, 0x36, 0xc2, 0xc0, 0x45, 0xf9, 0x28, 0x9b, 0xe7, 0x32, 0xe6, 0x89, 0xf2, 0x39, 0xa1, 0x8e,
	0x84, 0x7c, 0x04, 0xe3, 0x44, 0x2c, 0x44, 0x55, 0x9a, 0x72, 0x33, 0x28, 0xfa, 0xbb, 0x07, 0x9b,
	0x6e, 0x36, 0xc9, 0x8f, 0x60, 0xe7, 0x8a, 0xcb, 0x4a, 0xc4, 0x2c, 0x3d, 0x17, 0x2b, 0x8e, 0x1b,
	0xab, 0x9f, 0x4c, 0xe8, 0x1d, 0x39, 0xf9, 0x1c, 0xc6, 0x65, 0x2e, 0xab, 0x83, 0x46, 0x55, 0xed,
	0xfb, 0xb2, 0x6c, 0xec, 0x90, 0xa7, 0xae, 0x25, 0x2b, 0x0a, 0x91, 0x2d, 0x2c, 0x17, 0x5a, 0x4c,
	0xbe, 0x0f, 0xdb, 0x73, 0x71, 0xf3, 0x58, 0xc8, 0xb2, 0x3a, 0xcc, 0xd3, 0x7a, 0x95, 0xa9, 0x0a,
	0x9e, 0xd0, 0x5b, 0xd2, 0xa7, 0xa3, 0x89, 0xb7, 0x33, 0x78, 0x3a, 0x9a, 0xf8, 0x3b, 0xe3, 0xa8,
	0x80, 0xed, 0xfe, 0x4e, 0xd8, 0x96, 0x36, 0x08, 0xc5, 0x09, 0x3a, 0xbd, 0x3d, 0x19, 0x99, 0xc1,
	0x34, 0x11, 0x65, 0x91, 0xb2, 0xc6, 0xa1, 0x0d, 0x57, 0x84, 0x1c, 0x78, 0x25, 0x4a, 0x71, 0x99,
	0x6a, 0x2a, 0x9f, 0x50, 0x0b, 0xa3, 0x05, 0xf8, 0xaa, 0xac, 0x1d, 0x12, 0x0a, 0x2c, 0x09, 0x29,
	0xea, 0x1f, 0x38, 0xd4, 0xbf, 0x03, 0xc3, 0x5f, 0xf1, 0x1b, 0xf3, 0x1a, 0xe0, 0xb2, 0xa5, 0xaa,
	0x91, 0x43, 0x55, 0xf7, 0xc1, 0xbf, 0x50, 0xd7, 0xae, 0x29, 0x44, 0x83, 0xe8, 0x6b, 0x18, 0xeb,
	0xb6, 0x68, 0x3d, 0x7b, 0x8e, 0xe7, 0x19, 0x4c, 0x5f, 0x4a, 0xc1, 0xb3, 0x4a, 0x93, 0x8f, 0x39,
	0x82, 0x23, 0x8a, 0xfe, 0xea, 0xc1, 0x48, 0xdd, 0x52, 0x04, 0x9b, 0x29, 0x5f, 0xb0, 0xb8, 0x39,
	0xc8, 0xeb, 0x2c, 0x29, 0x43, 0x6f, 0x36, 0xdc, 0x1d, 0xd2, 0x9e, 0x0c, 0xcb, 0xe3, 0x52, 0x6b,
	0x07, 0xb3, 0xe1, 0x6e, 0x40, 0x0d, 0xc2, 0xd0, 0x52, 0x76, 0xc9, 0x53, 0x73, 0x04, 0x0d, 0xd0,
	0xba, 0x90, 0x7c, 0x2e, 0x6e, 0xcc, 0x31, 0x0c, 0x42, 0x79, 0x59, 0xcf, 0x51, 0xae, 0x4f, 0x62,
	0x10, 0x1e, 0xe0, 0x92, 0x95, 0x2d, 0x23, 0xe1, 0x1a, 0x3d, 0x97, 0x31, 0x4b, 0x2d, 0x25, 0x69,
	0x10, 0xfd, 0xc3, 0xc3, 0x87, 0x4c, 0x53, 0xec, 0x9d, 0x0c, 0x7f, 0x02, 0x13, 0xa4, 0xdf, 0x37,
	0x57, 0x4c, 0x9a, 0x03, 0x6f, 0x20, 0xbe, 0x60, 0x92, 0xfc, 0x14, 0xc6, 0xaa, 0x39, 0xd6, 0xd0,
	0xbd, 0x75, 0xa7, 0xb2, 0x4a, 0x8d, 0x59, 0x4b, 0x88, 0x23, 0x87, 0x10, 0xdb, 0xc3, 0xfa, 0xee,
	0x61, 0x3f, 0x03, 0x1f, 0x99, 0xb5, 0x51, 0xd1, 0xaf, 0xf5, 0xac, 0xf9, 0x57, 0x5b, 0x45, 0x0b,
	0xd8, 0xea, 0xed, 0xd8, 0xee, 0xe4, 0xf5, 0x77, 0xea, 0x1a, 0x3d, 0x30, 0x8d, 0x8d, 0xcd, 0x51,
	0xf2, 0x94, 0xc7, 0x15, 0x4f, 0x4c, 0xd5, 0xb5, 0xd8, 0x92, 0xc5, 0xa8, 0x25, 0x8b, 0xe8, 0x8f,
	0x5e, 0xb7, 0x93, 0x8a, 0x00, 0x8b, 0x36, 0xce, 0x57, 0x2b, 0x96, 0x25, 0x66, 0x33, 0x0b, 0x31,
	0x93, 0xc9, 0xa5, 0xd9, 0x6c, 0x90, 0x5c, 0x22, 0x96, 0x85, 0xb9, 0xd3, 0x81, 0x2c, 0xb0, 0x9a,
	0x56, 0x9c, 0x95, 0xb5, 0xe4, 0x2b, 0x9e, 0x55, 0x66, 0x17, 0x57, 0x44, 0x3e, 0x86, 0x8d, 0x8a,
	0x2d, 0xde, 0x60, 0x0c, 0xe6, 0x6e, 0x2b, 0xb6, 0x78, 0xc6, 0x1b, 0xf2, 0x4d, 0x08, 0x14, 0x83,
	0x2a, 0x95, 0xbe, 0xe0, 0x89, 0x12, 0x3c, 0xe3, 0x4d, 0xf4, 0x97, 0x01, 0x8c, 0xcf, 0xb8, 0xbc,
	0xe2, 0xf2, 0x83, 0xde, 0x6c, 0x77, 0x52, 0x1a, 0xbe, 0x67, 0x52, 0x1a, 0xad, 0x9f, 0x94, 0xfc,
	0x6e, 0x52, 0xba, 0x0f, 0xfe, 0x99, 0x8c, 0x8f, 0x8f, 0x54, 0x44, 0x43, 0xaa, 0x01, 0xd6, 0xe7,
	0x7e, 0x5c, 0x89, 0x2b, 0x6e, 0xc6, 0x27, 0x83, 0xee, 0x3c, 0xe5, 0x93, 0x35, 0x33, 0xcb, 0x7f,
	0x3b, 0x45, 0xd9, 0xa6, 0x05, 0xa7, 0x69, 0x23, 0xd8, 0xc4, 0x51, 0x2a, 0x61, 0x15, 0x7b, 0x7a,
	0xf6, 0xf2, 0x85, 0x9d, 0x9f, 0x5c, 0x59, 0xf4, 0x07, 0x0f, 0xc6, 0x27, 0xac, 0xc9, 0xeb, 0xea,
	0x4e, 0xfd, 0xcf, 0x60, 0xba, 0x5f, 0x14, 0xa9, 0x88, 0x7b, 0x3d, 0xef, 0x88, 0xd0, 0xe2, 0xb9,
	0x73, 0x8f, 0x3a, 0x87, 0xae, 0x08, 0x9f, 0x98, 0x43, 0x35, 0x16, 0xe9, 0x19, 0xc7, 0x79, 0x62,
	0xf4, 0x34, 0xa4, 0x94, 0x98, 0xec, 0xfd, 0xba, 0xca, 0xe7, 0x69, 0x7e, 0xad, 0xb2, 0x3a, 0xa1,
	0x2d, 0x8e, 0xfe, 0x39, 0x80, 0xd1, 0xff, 0x6b, 0x94, 0xd9, 0x04, 0x4f, 0x98, 0xa2, 0xf2, 0x44,
	0x3b, 0xd8, 0x6c, 0x38, 0x83, 0x4d, 0x08, 0x1b, 0x8d, 0x64, 0xd9, 0x82, 0x97, 0xe1, 0x44, 0xf1,
	0x9a, 0x85, 0x4a, 0xa3, 0x3a, 0x58, 0x4f, 0x34, 0x01, 0xb5, 0xb0, 0xed, 0x48, 0x70, 0x3a, 0xf2,
	0x27, 0x66, 0xf8, 0x99, 0xde, 0x1e, 0x17, 0xd6, 0xcd, 0x3c, 0xff, 0xbb, 0x77, 0xfc, 0xdf, 0x1e,
	0xf8, 0x6d, 0xf3, 0x1e, 0xf6, 0x9b, 0xf7, 0xb0, 0x6b, 0xde, 0xa3, 0x03, 0xdb, 0xbc, 0x47, 0x07,
	0x88, 0xe9, 0xa9, 0x6d, 0x5e, 0x7a, 0x8a, 0x97, 0xf5, 0x44, 0xe6, 0x75, 0x71, 0xd0, 0xe8, 0x5b,
	0x0d, 0x68, 0x8b, 0xb1, 0xe2, 0x7f, 0xbd, 0xe4, 0xd2, 0xa4, 0x3a, 0xa0, 0x06, 0x61, 0x7f, 0x9c,
	0x28, 0xaa, 0xd3, 0xc9, 0xd5, 0x80, 0x7c, 0x0f, 0x7c, 0x8a, 0xc9, 0x53, 0x19, 0xee, 0xdd, 0x8b,
	0x12, 0x53, 0xad, 0x45, 0xa7, 0xfa, 0x93, 0xc8, 0x34, 0x8a, 0xfd, 0x40, 0xfa, 0x31, 0x8c, 0xcf,
	0x96, 0x62, 0x5e, 0xd9, 0x11, 0xf2, 0x1b, 0x0e, 0x55, 0x8a, 0x15, 0x57, 0x3a, 0x6a, 0x4c, 0xa2,
	0x57, 0x10, 0xb4, 0xc2, 0x2e, 0x1c, 0xcf, 0x0d, 0x87, 0xc0, 0xe8, 0x75, 0x26, 0x2a, 0x4b, 0x11,
	0xb8, 0xc6, 0xc3, 0xbe, 0xaa, 0x59, 0x56, 0x89, 0xaa, 0xb1, 0x14, 0x61, 0x71, 0xf4, 0xd0, 0x84,
	0x8f, 0xee, 0x5e, 0x17, 0x05, 0x97, 0x86, 0x6e, 0x34, 0x50, 0x9b, 0xe4, 0xd7, 0x5c, 0xbf, 0x1d,
	0x43, 0xaa, 0x41, 0xf4, 0x1b, 0x08, 0xf6, 0x53, 0x2e, 0x2b, 0x5a, 0xa7, 0x7c, 0xdd, 0x9b, 0xae,
	0x1a, 0xd5, 0x44, 0x80, 0xeb, 0x8e, 0x5a, 0x86, 0xb7, 0xa8, 0xe5, 0x19, 0x2b, 0xd8, 0xf1, 0x91,
	0xaa, 0xf3, 0x21, 0x35, 0x28, 0xfa, 0x93, 0x07, 0x23, 0xe4, 0x30, 0xc7, 0xf5, 0xe8, 0x7d, 0xfc,
	0x77, 0x2a, 0xf3, 0x2b, 0x91, 0x70, 0x69, 0x0f, 0x67, 0xb1, 0x4a, 0x7a, 0xbc, 0xe4, 0xed, 0xe8,
	0x60, 0x10, 0xd6, 0x1a, 0x7e, 0x3f, 0xd9, 0x5e, 0x72, 0x6a, 0x0d, 0xc5, 0x54, 0x2b, 0x71, 0x3c,
	0x3c, 0xab, 0x0b, 0x2e, 0xf7, 0x93, 0x95, 0xb0, 0x73, 0x95, 0x23, 0x89, 0xbe, 0xd6, 0x5f, 0x64,
	0x77, 0x98, 0xd0, 0x5b, 0xff, 0xf5, 0x76, 0x3b, 0xf2, 0xe8, 0xcf, 0x1e, 0x6c, 0x3c, 0x37, 0x73,
	0x9c, 0x7b, 0x0a, 0xef, 0x9d, 0xa7, 0x18, 0xf4, 0x4e, 0xb1, 0x07, 0xf7, 0xad, 0x4d, 0x6f, 0x7f,
	0x9d, 0x85, 0xb5, 0x3a, 0x93, 0xd1, 0x51, 0x7b, 0x59, 0x1f, 0xf2, 0x41, 0x76, 0xde, 0xb7, 0x59,
	0x77, 0xe1, 0x77, 0x6e, 0x65, 0x06, 0x53, 0xfb, 0x21, 0x9a, 0xa7, 0xf6, 0x61, 0x72, 0x45, 0xd1,
	0x5b, 0x18, 0x1f, 0xe6, 0xd9, 0x5c, 0x2c, 0xc8, 0x2e, 0x8c, 0xf6, 0xeb, 0x6a, 0xa9, 0x3c, 0x4e,
	0xf7, 0xee, 0x3b, 0x8d, 0x5f, 0x57, 0x4b, 0x6d, 0x43, 0x95, 0x05, 0xf9, 0x05, 0x04, 0x27, 0xf9,
	0xe2, 0x42, 0x70, 0x5b, 0x91, 0xd3, 0xbd, 0x4f, 0x9c, 0x0f, 0x22, 0xab, 0x32, 0xbf, 0xe9, 0x6c,
	0xa3, 0x2f, 0x01, 0x3a, 0x67, 0xf8, 0x2c, 0x75, 0xd7, 0xf8, 0x82, 0x5f, 0x63, 0xad, 0x95, 0x66,
	0xfe, 0x5f, 0xa3, 0x89, 0x1e, 0xc3, 0xbd, 0x5b, 0xbe, 0xc9, 0x43, 0x64, 0x1e, 0x9c, 0xac, 0xf5,
	0x68, 0xf8, 0xae, 0x38, 0xd0, 0x82, 0x5a, 0xcb, 0xa8, 0xe9, 0xf9, 0x41, 0x59, 0x9b, 0x3b, 0xef,
	0x56, 0x45, 0xe7, 0xa5, 0x68, 0xdf, 0x2b, 0x9f, 0xb6, 0x98, 0xfc, 0x1c, 0x82, 0x47, 0x59, 0x9c,
	0x27, 0x22, 0x5b, 0xd8, 0xb1, 0x2d, 0xec, 0x7d, 0x3b, 0xd6, 0xab, 0xcc, 0x1a, 0xd0, 0xce, 0x34,
	0x7a, 0x01, 0xdb, 0x7d, 0xe5, 0xda, 0x01, 0xb9, 0x1d, 0xaa, 0x07, 0xce, 0x50, 0xdd, 0xc6, 0x38,
	0x74, 0x6a, 0xf7, 0x2b, 0x08, 0x0e, 0x6a, 0x91, 0x26, 0xc7, 0xd9, 0x3c, 0x47, 0x1a, 0xbe, 0xe0,
	0xb2, 0xec, 0x6a, 0xdf, 0x42, 0x2c, 0x5d, 0x64, 0xe4, 0x96, 0x8f, 0x0c, 0xba, 0x1c, 0xab, 0xbf,
	0x8c, 0x1e, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x2d, 0x1b, 0x8f, 0x44, 0x12, 0x00, 0x00,
}
